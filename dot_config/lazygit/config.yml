gui:
  nerdFontsVersion: "3"
  scrollHeight: 20 # how many lines you scroll by
  language: "en"
  # sidePanelWidth: 0.25 # number from 0 to 1
git:
  paging:
    pager: delta --dark --paging=never
  log:
    showGraph: "always"
    showWholeGraph: true
  branchLogCmd: "git log --graph --color=always --oneline --decorate --date=relative {{branchName}} --"
os:
  editPreset: "nvim"
notARepository: "skip" # one of: 'prompt' | 'create' | 'skip' | 'quit'
promptToReturnFromSubprocess: false
keybinding:
  universal:
    nextScreenMode: "="
    prevScreenMode: "-"
    prevPage: "<c-b>" # go to next page in list
    nextPage: "<c-f>" # go to previous page in list
# see https://github.com/jesseduffield/lazygit/blob/master/docs/Custom_Command_Keybindings.md
customCommands:
  - key: "A"
    description: "Amend last commit whit --no-verify"
    context: "files"
    prompts:
      - type: "confirm"
        title: "Amend last commit"
        body: "Are you sure you want to amend last commit? Afterwards, you can change the commit message from the commits panel."
    command: "git commit --amend --no-edit --allow-empty --no-verify"
  - key: "w"
    description: "Create new conventional commit"
    context: "files"
    prompts:
      - type: "menu"
        title: "Commit Type"
        key: "Type"
        options:
          - name: "feat"
            value: "feat"
            description: "A new feature"
          - name: "fix"
            value: "fix"
            description: "A bug fix"
          - name: "wip"
            value: "wip"
            description: "Work in process"
          - name: "chore"
            value: "chore"
            description: "Updating grunt tasks etc; no production code change"
          - name: "refactor"
            value: "refactor"
            description: "A code change that neither fixes a bug nor adds a feature"
          - name: "perf"
            value: "perf"
            description: "A code change that improves performance"
          - name: "docs"
            value: "docs"
            description: "Documentation only changes"
          - name: "style"
            value: "style"
            description: "Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)"
          - name: "test"
            value: "test"
            description: "Adding missing tests or correcting existing tests"
          - name: "ci"
            value: "ci"
            description: "Changes to our CI configuration files and scripts (example scopes: Travis, Circle, BrowserStack, SauceLabs)"
          - name: "build"
            value: "build"
            description: "Changes that affect the build system or external dependencies (example scopes: gulp, broccoli, npm)"
          - name: "revert"
            value: "revert"
            description: "revert"
      # - type: "input"
      #   title: "Scope - Add '(<scope>)'"
      #   key: "Scope"
      #   initialValue: ""
      # - type: "input"
      #   title: "Breaking change - Add '!'"
      #   key: "Breaking"
      #   initialValue: ""
      - type: "input"
        title: "Message"
        key: "Message"
        initialValue: ""
      # - type: 'menu'
      #       title: 'How to push?'
      #       options:
      #         - value: 'push'
      #         - value: 'push --force-with-lease'
      #         - value: 'push --force'
    # command: "git commit -n --message '{{.Form.Type}}{{.Form.Scope}}{{.Form.Breaking}}: {{.Form.Message}}'"
    command: "git commit -n --message '{{.Form.Type}}: {{.Form.Message}}'"
    loadingText: "Creating conventional commit..."
  - key: "D"
    description: Extract diff into index
    command: git diff {{.SelectedLocalBranch.Name}} > /tmp/lazygit.patch && git reset --hard {{.SelectedLocalBranch.Name}} && git apply /tmp/lazygit.patch
    context: localBranches
  - key: "U"
    description: "prune deleted remote branches"
    context: "commits"
    prompts:
      - type: "menuFromCommand"
        title: "Which remote repository to Pruning?"
        key: "Remote"
        command: bash -c "git remote --verbose | grep '/.* (push)'"
        filter: '(?P<remote>.*)\s+(?P<url>.*) \(push\)'
        valueFormat: "{{ .remote }}"
        labelFormat: "{{ .remote | bold | cyan }} {{ .url }}"
    command: "git remote update {{.Form.Remote}} --prune"
    loadingText: "Pruning..."
  - key: "R"
    description: "Rebase the checked-out branch onto the selected branch."
    context: "commits"
    prompts:
      - type: "confirm"
        title: "Rebase"
        body: "Are you sure rebase '{{.CheckedOutBranch.Name}}' onto '{{.SelectedLocalCommit.Sha}}'?"
    command: "git rebase --autostash --keep-empty --no-autosquash --rebase-merges {{.SelectedLocalCommit.Sha}}"
    loadingText: "Rebaseing..."
  - key: "<c-a>"
    description: "Search the whole history (From a ref and down) for an expression in a file"
    command: "git checkout {{index .PromptResponses 3}}"
    context: "commits"
    prompts:
      - type: "input"
        title: "Search word:"
      - type: "input"
        title: "File/Subtree:"
      - type: "input"
        title: "Ref:"
        initialValue: "{{index .CheckedOutBranch.Name }}"
      - type: "menuFromCommand"
        title: "Commits:"
        command: "git log --oneline {{index .PromptResponses 2}} -S'{{index .PromptResponses 0}}' --all -- {{index .PromptResponses 1}}"
        filter: "(?P<commit_id>[0-9a-zA-Z]*) *(?P<commit_msg>.*)"
        valueFormat: "{{ .commit_id }}"
        labelFormat: "{{ .commit_id | green | bold }} - {{ .commit_msg | yellow }}"
  - key: t
    description: tig file (history of commits affecting file)
    command: tig {{.SelectedSubCommit.Sha}} -- {{.SelectedCommitFile.Name}}
    context: commitFiles
    subprocess: yes
  - key: t
    description: tig file (history of commits affecting file)
    command: tig -- {{.SelectedFile.Name}}
    context: files
    subprocess: yes
  - key: t
    command: tig show {{.SelectedSubCommit.Sha}}
    context: subCommits
    description: tig commit (`t` again to browse files at revision)
    subprocess: yes
  - key: t
    command: tig show {{.SelectedLocalBranch.Name}}
    context: localBranches
    description: tig branch (`t` again to browse files at revision)
    subprocess: yes
  - key: t
    command: tig show {{.SelectedRemoteBranch.RemoteName}}/{{.SelectedRemoteBranch.Name}}
    context: remoteBranches
    description: tig branch (`t` again to browse files at revision)
    subprocess: yes
  - key: b
    command: tig blame -- {{.SelectedFile.Name}}
    context: files
    description: blame file at tree
    subprocess: yes
  - key: b
    command: tig blame {{.SelectedSubCommit.Sha}} -- {{.SelectedCommitFile.Name}}
    context: commitFiles
    description: blame file at revision
    subprocess: yes
  - key: B
    command: tig blame -- {{.SelectedCommitFile.Name}}
    context: commitFiles
    description: blame file at tree
    subprocess: yes
